"use strict";
const decorator_1 = require("@midwayjs/decorator");
const is = require("is-type-of");
module.exports = app => {
    // egg-schedule 的 app 里没有 schedule
    if (!app.runSchedule) {
        return;
    }
    const originMethod = app.runSchedule;
    app.runSchedule = (...args) => {
        if ((0, decorator_1.isClass)(args[0])) {
            args[0] = (0, decorator_1.getProviderId)(args[0]) + '#' + args[0].name;
        }
        return originMethod.call(app, ...args);
    };
    const schedules = (0, decorator_1.listModule)(decorator_1.SCHEDULE_KEY);
    for (const scheduleModule of schedules) {
        const providerId = (0, decorator_1.getProviderId)(scheduleModule);
        if (providerId) {
            const key = providerId + '#' + scheduleModule.name;
            const opts = (0, decorator_1.getClassMetadata)(decorator_1.SCHEDULE_KEY, scheduleModule);
            const task = async (ctx, data) => {
                const ins = await ctx.requestContext.getAsync(scheduleModule);
                ins.exec = app.toAsyncFunction(ins.exec);
                return ins.exec(ctx, data);
            };
            const env = app.config.env;
            const envList = opts.env;
            if (is.array(envList) && !envList.includes(env)) {
                app.coreLogger.info(`[midway-schedule]: ignore schedule ${key} due to \`schedule.env\` not match`);
                continue;
            }
            app.schedules[key] = {
                schedule: opts,
                task,
                key,
            };
        }
    }
};
//# sourceMappingURL=app.js.map