"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createInitializeContext = exports.event = exports.FCBaseTrigger = void 0;
const runtime_mock_1 = require("@midwayjs/runtime-mock");
const extend = require("extend2");
class FCBaseTrigger extends runtime_mock_1.BaseTrigger {
    constructor(triggerOptions = {}) {
        super();
        this.useCallback = true;
        this.triggerOptions = triggerOptions;
    }
    createContext() {
        return {
            requestId: 'b1c5100f-819d-c421-3a5e-7782a27d8a33',
            credentials: {
                accessKeyId: 'STS.access_key_id',
                accessKeySecret: 'access_key_secret',
                securityToken: 'security_token',
            },
            function: {
                name: 'my-func',
                handler: 'index.handler',
                memory: 128,
                timeout: 10,
                initializer: 'index.initializer',
                initializationTimeout: 10,
            },
            service: {
                name: 'my-service',
                logProject: 'my-log-project',
                logStore: 'my-log-store',
                qualifier: 'qualifier',
                versionId: '1',
            },
            region: 'cn-shanghai',
            accountId: '123456',
        };
    }
    getEvent() {
        return this.triggerOptions;
    }
}
exports.FCBaseTrigger = FCBaseTrigger;
exports.event = FCBaseTrigger;
const createInitializeContext = (ctx = {}) => {
    return extend(true, new FCBaseTrigger().createContext(), ctx);
};
exports.createInitializeContext = createInitializeContext;
//# sourceMappingURL=base.js.map