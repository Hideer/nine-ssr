/// <reference types="node" />
import * as express from 'express';
import { FCBaseTrigger } from './base';
interface HTTPTriggerOpts {
    path: string;
    method: string;
    headers?: {
        [key: string]: any;
    };
    query?: {
        [key: string]: any;
    };
    body?: {
        [key: string]: any;
    } | Buffer;
}
export declare class HTTPTrigger extends FCBaseTrigger {
    httpServer: any;
    app: express.Application;
    opts: HTTPTriggerOpts;
    handler: (err: any, result: any) => void;
    constructor(options?: HTTPTriggerOpts);
    delegate(invokeWrapper: (invokeArgs: any[]) => any): Promise<express.Application>;
    toArgs(): Promise<any[]>;
    createCallback(handler: any): (err: any) => void;
    close(): Promise<void>;
}
export declare const http: typeof HTTPTrigger;
export {};
//# sourceMappingURL=http.d.ts.map