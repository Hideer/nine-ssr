interface Ilayer {
    [extName: string]: {
        path: string;
    };
}
export declare function formatLayers(...multiLayers: Ilayer[]): {
    npm: {};
    oss: {};
};
export declare function commonPrefix(arr: string[]): string;
export declare const uselessFilesMatch: string[];
export declare const removeUselessFiles: (target: string) => Promise<void>;
export declare const analysisDecorator: (cwd: string, currentFunc?: any) => Promise<{
    funcSpec: any;
    applicationContext: any;
}>;
interface ModInfo {
    name: string;
    version: string;
}
export declare const copyFromNodeModules: (moduleInfoList: ModInfo[], baseNodeModuleDir: string, fromNodeModulesPath: string, targetNodeModulesPath: string, moduleMap?: {
    [modName: string]: {
        version: string;
        path: string;
    };
}) => Promise<{
    [modName: string]: {
        version: string;
        path: string;
    };
}>;
export {};
//# sourceMappingURL=utils.d.ts.map