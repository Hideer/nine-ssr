"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.close = exports.start = exports.asyncWrapper = void 0;
const runtime_engine_1 = require("@midwayjs/runtime-engine");
const runtime_1 = require("./runtime");
var runtime_engine_2 = require("@midwayjs/runtime-engine");
Object.defineProperty(exports, "asyncWrapper", { enumerable: true, get: function () { return runtime_engine_2.asyncWrapper; } });
__exportStar(require("./runtime"), exports);
let bootstrap;
const start = async (options = {}) => {
    if (!process.env.NODE_ENV) {
        process.env.NODE_ENV = 'production';
    }
    if (process.env['FC_FUNC_CODE_PATH']) {
        // 用于替换默认的上下文日志
        process.env['MIDWAY_SERVERLESS_REPLACE_LOGGER'] = 'true';
        // 移除控制台颜色，fc 控制台无法探测是否支持，日志采集也必须把颜色禁用掉
        process.env['MIDWAY_LOGGER_DISABLE_COLORS'] = 'true';
    }
    bootstrap = new runtime_engine_1.BaseBootstrap(Object.assign({
        runtime: new runtime_1.FCRuntime(),
    }, options));
    await bootstrap.start();
    return bootstrap.getRuntime();
};
exports.start = start;
const close = async () => {
    return bootstrap.close();
};
exports.close = close;
//# sourceMappingURL=index.js.map