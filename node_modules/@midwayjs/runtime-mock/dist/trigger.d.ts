export interface Trigger {
    useCallback: boolean;
    toArgs(): any;
    getEvent(): any;
    delegate(invokeWrapper: (invokeArgs: any[]) => any): any;
    close(): any;
    createCallback(cb: any): any;
    createContext(): any;
}
export declare class BaseTrigger implements Trigger {
    useCallback: boolean;
    toArgs(): Promise<any[]>;
    createCallback(handler: any): (err: any, result: any) => void;
    delegate(invokeWrapper: (invokeArgs: any[]) => any): Promise<any>;
    close(): Promise<void>;
    getEvent(): void;
    createContext(): void;
}
//# sourceMappingURL=trigger.d.ts.map