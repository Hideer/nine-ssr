"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerlessLightRuntime = void 0;
/* istanbul ignore file */
const runtime_1 = require("./runtime");
/**
 * A lightweight runtime implementation for a platform like aliyun fc that does not provide a custom runtime
 * So you can wrapper invoke handler use asyncEvent method
 */
class ServerlessLightRuntime extends runtime_1.ServerlessBaseRuntime {
    async invokeHandlerWrapper(context, invokeHandler) {
        const contextExtensions = this.getContextExtensions() || [];
        // load context extension
        for (const contextExtension of contextExtensions) {
            await contextExtension(context, this);
        }
        try {
            await this.handlerInvokerWrapper('beforeInvokeHandler', [context]);
            const result = await invokeHandler();
            await this.handlerInvokerWrapper('afterInvokeHandler', [
                null,
                result,
                context,
            ]);
            return result;
        }
        catch (err) {
            await this.handlerInvokerWrapper('afterInvokeHandler', [
                err,
                null,
                context,
            ]);
            throw err;
        }
    }
}
exports.ServerlessLightRuntime = ServerlessLightRuntime;
//# sourceMappingURL=lightRuntime.js.map