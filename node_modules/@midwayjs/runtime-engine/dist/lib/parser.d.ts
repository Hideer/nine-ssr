import { PropertyParser } from '../interface';
export declare enum EnvPropertyKey {
    INIT_TIMEOUT = "INIT_TIMEOUT",
    INIT_HANDLER = "INIT_HANDLER",
    FUNC_TIMEOUT = "FUNC_TIMEOUT",
    FUNC_HANDLER = "FUNC_HANDLER",
    FUNC_RUNTIME = "FUNC_RUNTIME",
    ENTRY_DIR = "ENTRY_DIR",
    TRIGGER_TYPE = "TRIGGER_TYPE",
    FUNC_LAYER = "FUNC_LAYER",
    LOGER_LEVEL = "LOGGER_LEVEL",
    EAGLEEYE_FLAG = "EAGLE_FLAG"
}
export declare class EnvPropertyParser<T> extends Map<string, T> implements PropertyParser<T> {
    setProperty(propertyKey: string, value: any): void;
    getProperty(propertyKey: string, defaultValue?: any): T;
    getInitTimeout(): T;
    getFuncTimeout(): T;
    getInitHandler(): T;
    getFunctionHandler(): T;
    getFunctionRuntime(): T;
    getEntryDir(): T;
    getTriggerType(): T;
    getFunctionLayer(): T;
    getLoggerLevel(): T;
    getTraceFlag(): T;
}
//# sourceMappingURL=parser.d.ts.map