import { DevPackOptions, InvokeCallback } from './interface';
import { Context } from 'koa';
import { NextFunction, Request, Response } from 'express';
export { parseInvokeOptionsByOriginUrl } from './common';
export * from './interface';
export declare class KoaGateway {
    options: DevPackOptions;
    constructor(options: DevPackOptions);
    transform(ctx: Context, next: () => Promise<any>, invoke: InvokeCallback): Promise<void>;
}
export declare class ExpressGateway {
    options: DevPackOptions;
    constructor(options: DevPackOptions);
    transform(req: Request, res: Response, next: NextFunction, invoke: InvokeCallback): Promise<void>;
}
export declare const createKoaGateway: (options: DevPackOptions) => KoaGateway;
export declare const createExpressGateway: (options: DevPackOptions) => ExpressGateway;
//# sourceMappingURL=index.d.ts.map