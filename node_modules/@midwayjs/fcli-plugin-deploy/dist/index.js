"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeployPlugin = void 0;
const command_core_1 = require("@midwayjs/command-core");
class DeployPlugin extends command_core_1.BasePlugin {
    constructor() {
        super(...arguments);
        this.commands = {
            deploy: {
                usage: 'Deploy to online',
                lifecycleEvents: ['deploy'],
                options: {
                    yes: {
                        usage: 'continue with yes',
                        alias: 'y',
                    },
                    function: {
                        usage: 'select function need to publish',
                        shortcut: 'f',
                    },
                },
            },
        };
        this.hooks = {
            'after:deploy:deploy': () => {
                var _a, _b;
                if ((_b = (_a = this.core.service.custom) === null || _a === void 0 ? void 0 : _a.customDomain) === null || _b === void 0 ? void 0 : _b.domainName) {
                    this.displayDomain();
                }
            },
        };
    }
    displayDomain() {
        var _a;
        const allPaths = [];
        for (const funName in this.core.service.functions) {
            const funInfo = this.core.service.functions[funName];
            for (const event of (_a = funInfo === null || funInfo === void 0 ? void 0 : funInfo['events']) !== null && _a !== void 0 ? _a : []) {
                if (event['http']) {
                    allPaths.push((event['http'].path || '/').replace(/\*/g, ''));
                }
            }
        }
        if (!allPaths.length) {
            return;
        }
        const domain = this.core.service.custom.customDomain.domainName.replace(/\/$/, '');
        if (domain === 'auto') {
            return;
        }
        console.log('\nDomain bind: ' + domain);
        for (const path of allPaths) {
            console.log(`- path bind: http://${domain}/${path.replace(/^\//, '')}`);
        }
    }
}
exports.DeployPlugin = DeployPlugin;
//# sourceMappingURL=index.js.map