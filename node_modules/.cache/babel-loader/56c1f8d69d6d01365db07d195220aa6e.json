{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { pathToRegexp } from 'path-to-regexp';\nimport { normalizePath } from './utils';\n\nvar preloadComponent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(Routes, PrefixRouterBase) {\n    var _iterator, _step, route, component, path, pathname;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iterator = _createForOfIteratorHelper(Routes);\n            _context.prev = 1;\n\n            _iterator.s();\n\n          case 3:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 14;\n              break;\n            }\n\n            route = _step.value;\n            component = route.component, path = route.path;\n            pathname = location.pathname;\n\n            if (PrefixRouterBase) {\n              pathname = normalizePath(pathname, PrefixRouterBase);\n            }\n\n            if (!(component.name === 'dynamicComponent' && pathToRegexp(path).test(pathname))) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 11;\n            return component();\n\n          case 11:\n            route.component = _context.sent[\"default\"];\n\n          case 12:\n            _context.next = 3;\n            break;\n\n          case 14:\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](1);\n\n            _iterator.e(_context.t0);\n\n          case 19:\n            _context.prev = 19;\n\n            _iterator.f();\n\n            return _context.finish(19);\n\n          case 22:\n            return _context.abrupt(\"return\", Routes);\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 16, 19, 22]]);\n  }));\n\n  return function preloadComponent(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { preloadComponent };","map":{"version":3,"sources":["/Users/yumengcheng/Study/nine-ssr/node_modules/ssr-client-utils/esm/preload.js"],"names":["pathToRegexp","normalizePath","preloadComponent","Routes","PrefixRouterBase","route","component","path","pathname","location","name","test"],"mappings":";;;;;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,QAA8B,SAA9B;;AACA,IAAMC,gBAAgB;AAAA,sEAAG,iBAAOC,MAAP,EAAeC,gBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mDACDD,MADC;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACVE,YAAAA,KADU;AAETC,YAAAA,SAFS,GAEWD,KAFX,CAETC,SAFS,EAEEC,IAFF,GAEWF,KAFX,CAEEE,IAFF;AAGbC,YAAAA,QAHa,GAGFC,QAAQ,CAACD,QAHP;;AAIjB,gBAAIJ,gBAAJ,EAAsB;AAClBI,cAAAA,QAAQ,GAAGP,aAAa,CAACO,QAAD,EAAWJ,gBAAX,CAAxB;AACH;;AANgB,kBAObE,SAAS,CAACI,IAAV,KAAmB,kBAAnB,IAAyCV,YAAY,CAACO,IAAD,CAAZ,CAAmBI,IAAnB,CAAwBH,QAAxB,CAP5B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQYF,SAAS,EARrB;;AAAA;AAQbD,YAAAA,KAAK,CAACC,SARO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,6CAWdH,MAXc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBD,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAaA,SAASA,gBAAT","sourcesContent":["import { pathToRegexp } from 'path-to-regexp';\nimport { normalizePath } from './utils';\nconst preloadComponent = async (Routes, PrefixRouterBase) => {\n    for (const route of Routes) {\n        const { component, path } = route;\n        let pathname = location.pathname;\n        if (PrefixRouterBase) {\n            pathname = normalizePath(pathname, PrefixRouterBase);\n        }\n        if (component.name === 'dynamicComponent' && pathToRegexp(path).test(pathname)) {\n            route.component = (await component()).default;\n        }\n    }\n    return Routes;\n};\nexport { preloadComponent };\n"]},"metadata":{},"sourceType":"module"}