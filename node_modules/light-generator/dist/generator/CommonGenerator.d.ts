/// <reference types="node" />
import { CommonGeneratorOptions, CopyWalker, TemplatePackageConfig } from '../interface';
import EventEmitter from 'events';
export declare abstract class CommonGenerator {
    copyWalker: CopyWalker;
    templateUri: string;
    targetPath: string;
    templateName: string;
    templateConfig: TemplatePackageConfig;
    eventCenter: EventEmitter;
    constructor(options: CommonGeneratorOptions);
    /**
     * 获取模板配置
     */
    getTemplateConfig(): Promise<TemplatePackageConfig>;
    /**
     * 获取参数列表
     */
    getParameterList(): Promise<any>;
    /**
     * 获取参数默认值
     */
    getDefaultParameterValue(): Promise<{}>;
    run(replaceParameter?: {}): Promise<void>;
    runScript(packageRoot: string, runString: string, runArgs: Record<string, unknown>): Promise<void>;
    onTemplateReady(handler: () => void): void;
    onFileCreated(handler: (data: {
        sourceFullFilePath: string;
        targetFullFilePath: string;
        destDir: string;
        relativeFilePath: string;
    }) => void): void;
    abstract getTemplatePath(): string;
}
