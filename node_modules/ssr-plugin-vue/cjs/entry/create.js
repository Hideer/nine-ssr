"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RealVuex = exports.RealRouter = exports.RealVue = exports.createStore = exports.createRouter = void 0;
// @ts-nocheck
const Vue = require("vue");
const Vuex = require("vuex");
const Router = require("vue-router");
const ssr_temporary_routes_1 = require("_build/ssr-temporary-routes");
const clone_1 = require("./clone");
// without tsconfig esModuleInterop options must use the compatible syntax
const RealVue = Vue.default || Vue;
exports.RealVue = RealVue;
const RealRouter = Router.default || Router;
exports.RealRouter = RealRouter;
const RealVuex = Vuex.default || Vuex;
exports.RealVuex = RealVuex;
RealVue.use(RealRouter);
RealVue.use(RealVuex);
function createRouter(options = {}) {
    var _a;
    return new RealRouter({
        mode: 'history',
        routes: ssr_temporary_routes_1.FeRoutes,
        base: (_a = options.base) !== null && _a !== void 0 ? _a : '/'
    });
}
exports.createRouter = createRouter;
function createStore() {
    var _a;
    return new Vuex.Store((_a = (0, clone_1.deepClone)(ssr_temporary_routes_1.store)) !== null && _a !== void 0 ? _a : {});
}
exports.createStore = createStore;
