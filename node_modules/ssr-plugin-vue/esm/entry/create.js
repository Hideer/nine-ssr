// @ts-nocheck
import * as Vue from 'vue';
import * as Vuex from 'vuex';
import * as Router from 'vue-router';
import { FeRoutes, store } from '_build/ssr-temporary-routes';
import { deepClone } from './clone';
// without tsconfig esModuleInterop options must use the compatible syntax
const RealVue = Vue.default || Vue;
const RealRouter = Router.default || Router;
const RealVuex = Vuex.default || Vuex;
RealVue.use(RealRouter);
RealVue.use(RealVuex);
function createRouter(options = {}) {
    var _a;
    return new RealRouter({
        mode: 'history',
        routes: FeRoutes,
        base: (_a = options.base) !== null && _a !== void 0 ? _a : '/'
    });
}
function createStore() {
    var _a;
    return new Vuex.Store((_a = deepClone(store)) !== null && _a !== void 0 ? _a : {});
}
export { createRouter, createStore, RealVue, RealRouter, RealVuex };
